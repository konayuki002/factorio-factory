from luaparser.astnodes import *
from _typeshed import Incomplete
from antlr4 import CommonTokenStream as CommonTokenStream
from antlr4.tree.Tree import ErrorNodeImpl as ErrorNodeImpl, TerminalNodeImpl as TerminalNodeImpl
from luaparser.parser.LuaLexer import LuaLexer as LuaLexer
from luaparser.parser.LuaParser import LuaParser as LuaParser
from luaparser.parser.LuaParserVisitor import LuaParserVisitor as LuaParserVisitor
from typing import TypeVar

TNode = TypeVar('TNode', bound=Node)

class BuilderVisitor(LuaParserVisitor):
    VISITED_CHANNEL: int
    COMMENT_CHANNEL: int
    comment_token_stream: Incomplete
    def __init__(self, comment_token_stream: CommonTokenStream) -> None: ...
    def visitStart_(self, ctx: LuaParser.Start_Context): ...
    def visitTerminal(self, node: TerminalNodeImpl): ...
    def visitErrorNode(self, node: ErrorNodeImpl): ...
    def defaultResult(self) -> None: ...
    def aggregateResult(self, aggregate, nextResult): ...
    def add_comments(self, start, stop: CommonToken, node: TNode, allow_right_ctx: bool = False, ignore_right_nl: bool = False, ignore_left_comma: bool = False, ignore_left_double_nl: bool = False) -> TNode: ...
    def add_context(self, parser_nodes: None, node: TNode, allow_right_ctx: bool = False, ignore_right_nl: bool = False, ignore_left_comma: bool = False, ignore_left_double_nl: bool = False, without_start_stop_tokens: bool = False) -> TNode: ...
    def visitChunk(self, ctx: LuaParser.ChunkContext): ...
    def visitBlock(self, ctx: LuaParser.BlockContext): ...
    def visitStat_empty(self, ctx: LuaParser.Stat_emptyContext): ...
    def visitStat_assignment(self, ctx: LuaParser.Stat_assignmentContext): ...
    def visitStat_functioncall(self, ctx: LuaParser.Stat_functioncallContext): ...
    def visitStat_label(self, ctx: LuaParser.Stat_labelContext): ...
    def visitStat_break(self, ctx: LuaParser.Stat_breakContext): ...
    def visitStat_goto(self, ctx: LuaParser.Stat_gotoContext): ...
    def visitStat_do(self, ctx: LuaParser.Stat_doContext): ...
    def visitStat_while(self, ctx: LuaParser.Stat_whileContext): ...
    def visitStat_repeat(self, ctx: LuaParser.Stat_repeatContext): ...
    def visitStat_if(self, ctx: LuaParser.Stat_ifContext): ...
    def visitStat_for(self, ctx: LuaParser.Stat_forContext): ...
    def visitStat_function(self, ctx: LuaParser.Stat_functionContext): ...
    def visitStat_localfunction(self, ctx: LuaParser.Stat_localfunctionContext): ...
    def visitStat_local(self, ctx: LuaParser.Stat_localContext): ...
    def visitFunctiondef(self, ctx: LuaParser.FunctiondefContext) -> AnonymousFunction: ...
    def visitAttnamelist(self, ctx: LuaParser.AttnamelistContext): ...
    def visitNameattrib(self, ctx: LuaParser.NameattribContext): ...
    def visitAttrib(self, ctx: LuaParser.AttribContext): ...
    def visitRetstat(self, ctx: LuaParser.RetstatContext): ...
    def visitLabel(self, ctx: LuaParser.LabelContext): ...
    def visitFuncname(self, ctx: LuaParser.FuncnameContext): ...
    def visitVarlist(self, ctx: LuaParser.VarlistContext): ...
    def visitNamelist(self, ctx: LuaParser.NamelistContext) -> List[Name]: ...
    def visitExplist(self, ctx: LuaParser.ExplistContext): ...
    def visitExp(self, ctx: LuaParser.ExpContext) -> Expression: ...
    def visitVar(self, ctx: LuaParser.VarContext): ...
    def visitPrefixexp(self, ctx: LuaParser.PrefixexpContext): ...
    def visitFunctioncall_name(self, ctx: LuaParser.Functioncall_nameContext): ...
    def visitFunctioncall_nested(self, ctx: LuaParser.Functioncall_nestedContext): ...
    def visitFunctioncall_exp(self, ctx: LuaParser.Functioncall_expContext): ...
    def visitFunctioncall_expinvoke(self, ctx: LuaParser.Functioncall_expinvokeContext): ...
    def visitFunctioncall_invoke(self, ctx: LuaParser.Functioncall_invokeContext): ...
    def visitFunctioncall_nestedinvoke(self, ctx: LuaParser.Functioncall_nestedinvokeContext): ...
    def visitAllTails(self, root_exp: Expression, tails: List[LuaParser.TailContext]): ...
    def visitTail(self, ctx: LuaParser.TailContext): ...
    def visitArgs(self, ctx: LuaParser.ArgsContext): ...
    def visitFuncbody(self, ctx: LuaParser.FuncbodyContext) -> tuple[List[Expression], Block]: ...
    def visitParlist(self, ctx: LuaParser.ParlistContext) -> List[Expression]: ...
    def visitTableconstructor(self, ctx: LuaParser.TableconstructorContext): ...
    def visitFieldlist(self, ctx: LuaParser.FieldlistContext): ...
    def visitField(self, ctx: LuaParser.FieldContext): ...
    def visitFieldsep(self, ctx: LuaParser.FieldsepContext): ...
    def visitNumber(self, ctx: LuaParser.NumberContext): ...
    def visitString(self, ctx: LuaParser.StringContext): ...
